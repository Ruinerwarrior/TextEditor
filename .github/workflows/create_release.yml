name: create_release
on: 
  push:
    tags:
      - 'v*'
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
        - os: macos-latest
        - os: ubuntu-latest
        - os: windows-latest
    steps:
    - name: echo tag
      run: echo ${{github.ref}}
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Configure CMake
      working-directory: ${{github.workspace}}/TextEditor
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}//build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TESTS=ON ..

    - name: Build
      working-directory: ${{github.workspace}}/TextEditor
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -VV --no-compress-output -T Test
    
    - name: Release
      id: create_release
      run: |
          response=$(curl \
          --request POST \
          --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          --header "Accept: application/vnd.github.v3+json" \
          --url "https://api.github.com/repos/Ruinerwarrior/TextEditor/releases" \
          --data '{
           "tag_name": "${{github.ref}}",
           "discussion_category_name": "Announcements"
           }') \
          echo "the response is $response" |
          echo "::set-output name=release_response::$($response)"
    
    - name: Upload asset
      id: upload_asset
      run: |
          echo "${{steps.vars.outputs.release_response}}"
